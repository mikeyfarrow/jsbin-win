{
  "name": "file-db",
  "version": "0.0.2",
  "description": "Document database that uses directories and files to store its data, supporting nested key-value objects in named collections",
  "main": "filedb.js",
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/leftlogic/filedb.git"
  },
  "author": {
    "name": "Tom Ashworth",
    "email": "tom@phuu.net"
  },
  "license": "MIT",
  "dependencies": {
    "shortid": "~1.0.9",
    "underscore": "~1.4.4",
    "mkdirp": "~0.3.5",
    "async": "~0.2.8"
  },
  "devDependencies": {
    "tap": "~0.4.2"
  },
  "readme": "# File DB\n\nFile DB is a (very limited) document database that uses directories and files to store its data, supporting nested key-value objects in named collections.\n\n**Note:** It does not support storage of arrays. Give it objects with keys and values.\n\n## Usage\n\nThe following code assumes you have installed `file-db` via npm and have this at the top of your file:\n\n```javascript\nvar fdb = require('file-db');\n```\n\n### fdb\n\nThe main `file-db` lets you open a database.\n\n#### Open a database\n\nTo open a connection to the database, use `open`, passing a path and a callback. The callback receives an error parameter and a connection object.\n\n```javascript\nfdb.open('tmp/example', function (err, db) {\n  // . . .\n  // Do your database stuff\n  // . . .\n});\n```\n\n### Connection\n\nConnection objects allow you to choose a collection to query.\n\n#### Query a collection\n\nThe `use` method chooses a collection and returns a query object that you can use to query that collection.\n\n```javascript\nvar query = db.use('users');\n```\n\n### Query\n\nQuery objects are tied to a specific collection, allowing you to choose how to query it.\n\n#### Running a query\n\nWhatever the query object, you can run it using the `exec` method:\n\n```javascript\nquery.exec(function (err, documents) {\n  // Use the documents\n});\n```\n\n#### Find all documents in a collection\n\nThe `find` method sets up the query to retrieve all documents from a collection.\n\n```javascript\nquery.find()\n     .exec(doSomethingWithIt);\n```\n\n#### Find a document by _id\n\nThe `find` method sets up the query to retrieve all documents from a collection.\n\n```javascript\nquery.findById('some-id')\n     .exec(doSomethingWithIt);\n```\n\n#### Saving data\n\nThe `save` method is an upsert for one document. That means it will create data you give it if it doesn't exist, and will generate an `_id` for the document if you don't give it one.\n\nIf you do give `save` an _id and the data does exist it will update the document.\n\n`save` can be called multiple times â€“ it appends to the data you've already added.\n\n##### New document\n\n```javascript\ndb.use('users')\n  .save({ name: 'Tom' })\n  .exec(doSomething);\n```\n\n##### New document with id\n\n```javascript\ndb.use('users')\n  .save({ _id: 'abc123' })\n  .save({ name: 'Tom' })\n  .exec(doSomething);\n```\n\n##### Update existing document\n\n```javascript\ndb.use('users')\n  .save({\n    _id: 'abc123',\n    name: 'phuu'\n  })\n  .exec(doSomething);\n```\n\n## Install\n\nTo install file-db, use npm:\n\n`npm install file-db`\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/leftlogic/filedb/issues"
  },
  "homepage": "https://github.com/leftlogic/filedb",
  "_id": "file-db@0.0.2",
  "_shasum": "ec8b0ba052ea1d48fc5b3b2fb347b6cf64d610c2",
  "_from": "file-db@0.0.2",
  "_resolved": "https://registry.npmjs.org/file-db/-/file-db-0.0.2.tgz"
}
