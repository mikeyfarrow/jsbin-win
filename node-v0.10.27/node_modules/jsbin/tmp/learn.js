'use strict';

var st = require('st');
var glob = require('glob');
var harp = require('harp');
var fs = require('fs');
var htmlFiles = [];
var roots = [];

// find all the .html files in this compiled version so that visitors can
// link to /foo/bar and we'll know that there's a .html that they actually
// wanted to request.
function updateFiles() {
  console.log(roots);
  roots.forEach(function (root) {
    glob('**/*.html', {
      cwd: root,
      dot: false
    }, function (er, files) {
      htmlFiles = files.map(function (file) {
        return '/' + file;
      });
    });
  });
}

module.exports.serve = function serve(root, url) {
  // wonder if there can be more than one 404 page generated by harp...
  var fourohfour = '';

  if (fs.existsSync(root + '/404.html')) {
    fourohfour = fs.readFileSync(root + '/404.html');
  }

  var mount = st({
    path: root,
    url: url,
    index: 'index.html', // server index.html for directories
    passthrough: true // pass through if not found, so we can send 404
  });

  if (roots.indexOf(root) === -1) {
    roots.push(root);
  }

  updateFiles();

  return function (req, res) {
    if (htmlFiles.indexOf(req.url + '.html') !== -1) {
      // then we requested /foo/bar and we know there's a
      // generated file that matches
      req.url += '.html';
    }

    mount(req, res, function () {
      console.log('404');
      res.writeHead(404);
      res.end(fourohfour);
    });
  };
};

module.exports.compile = function (source, next) {
  var outputPath = source + '/www';
  if (!next) { next = function () {}; }

  console.log(source, outputPath);

  harp.compile(source, outputPath, function(errors){
    if (errors) {
      console.log(JSON.stringify(errors, null, 2));
      return next(errors);
    }

    updateFiles();

    next();
  });
};


